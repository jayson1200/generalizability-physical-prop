#!/usr/bin/env python3
import subprocess
from itertools import product

# 1) Define your grid of example parameters.
param_grid = {
    # Apparently only sliding friction is considered at the moment
    "friction": [
        "0.01 0 0",
        "0.02 0 0",
        "0.03 0 0",
        "0.04 0 0",
        "0.05 0 0",
        "0.1, 0 0",
        "0.2 0 0",
        "0.3 0 0",
        "0.4 0 0",
        "0.5 0 0",
        "0.6 0 0",
        "0.7 0 0",
        "0.8 0 0",
        "0.9 0 0",
        "1 0 0",
        "2 0 0",
        "3 0 0",
        "4 0 0",
        "5 0 0",
        "7.5 0 0",
        "10 0 0",
        "12.5 0 0",
        "15 0 0",
        "17.5 0 0",
        "20 0 0",
        "30 0 0",
        "40 0 0",
        "50 0 0"
    ],
    "density": [
        "250",
        "500",
        "750",
        "1000",
        "1250",
        "1500",
        "1750",
        "2000",
        "5000",
        "7500",
        "10000",
        "12500",
        "15000",
        "17500",
        "20000",
        "22500"
    ],
    "center_of_mass" : [
        "0.0 0.0 0.0",

        # three-axis combos for small offsets
        "-0.03 0.03 0.03",
        "-0.03 -0.03 0.03",
        "-0.03 0.03 -0.03",
        "0.03 -0.03 -0.03",
        "0.03 0.03 -0.03",

        "-0.02 0.02 0.02",
        "-0.02 -0.02 0.02",
        "-0.02 0.02 -0.02",
        "0.02 -0.02 -0.02",
        "0.02 0.02 -0.02",

        "-0.01 0.01 0.01",
        "-0.01 -0.01 0.01",
        "-0.01 0.01 -0.01",
        "0.01 -0.01 -0.01",
        "0.01 0.01 -0.01",

        # ─── three-axis combos for 0.1 ─────────────────────────────────
        "-0.1 0.1 0.1",
        "-0.1 -0.1 0.1",
        "-0.1 0.1 -0.1",
        "0.1 -0.1 -0.1",
        "0.1 0.1 -0.1",

        # ─── three-axis combos for 0.2 ─────────────────────────────────
        "-0.2 0.2 0.2",
        "-0.2 -0.2 0.2",
        "-0.2 0.2 -0.2",
        "0.2 -0.2 -0.2",
        "0.2 0.2 -0.2",

        # ─── three-axis combos for 0.3 ─────────────────────────────────
        "-0.3 0.3 0.3",
        "-0.3 -0.3 0.3",
        "-0.3 0.3 -0.3",
        "0.3 -0.3 -0.3",
        "0.3 0.3 -0.3",

        # ─── three-axis combos for 0.4 ─────────────────────────────────
        "-0.4 0.4 0.4",
        "-0.4 -0.4 0.4",
        "-0.4 0.4 -0.4",
        "0.4 -0.4 -0.4",
        "0.4 0.4 -0.4",

        # ─── three-axis combos for 0.5 ─────────────────────────────────
        "-0.5 0.5 0.5",
        "-0.5 -0.5 0.5",
        "-0.5 0.5 -0.5",
        "0.5 -0.5 -0.5",
        "0.5 0.5 -0.5",

        # two-axis combos
        "-0.03  0.03  0.0",
        "-0.03  0.0   0.03",
        " 0.03 -0.03  0.0",
        " 0.0  -0.03  0.03",
        "-0.02  0.02  0.0",
        "-0.02  0.0   0.02",
        " 0.02 -0.02  0.0",
        " 0.0  -0.02  0.02",
        "-0.01  0.01  0.0",
        "-0.01  0.0   0.01",
        " 0.01 -0.01  0.0",
        " 0.0  -0.01  0.01",
        "-0.05  0.05  0.0",
        "-0.05  0.0   0.05",
        " 0.05 -0.05  0.0",
        " 0.0  -0.05  0.05",
        "-0.10  0.10  0.0",
        "-0.10  0.0   0.10",
        " 0.10 -0.10  0.0",
        " 0.0  -0.10  0.10",

        "-0.2   0.2   0.0",
        "-0.2   0.0   0.2",
        " 0.2  -0.2   0.0",
        " 0.0  -0.2   0.2",
        "-0.3   0.3   0.0",
        "-0.3   0.0   0.3",
        " 0.3  -0.3   0.0",
        " 0.0  -0.3   0.3",
        "-0.4   0.4   0.0",
        "-0.4   0.0   0.4",
        " 0.4  -0.4   0.0",
        " 0.0  -0.4   0.4",

        # one-axis combos
        " 0.03  0.0   0.0",
        "-0.03  0.0   0.0",
        " 0.0   0.03  0.0",
        " 0.0  -0.03  0.0",
        " 0.0   0.0   0.03",
        " 0.0   0.0  -0.03",
        " 0.02  0.0   0.0",
        "-0.02  0.0   0.0",
        " 0.0   0.02  0.0",
        " 0.0  -0.02  0.0",
        " 0.0   0.0   0.02",
        " 0.0   0.0  -0.02",
        " 0.01  0.0   0.0",
        "-0.01  0.0   0.0",
        " 0.0   0.01  0.0",
        " 0.0  -0.01  0.0",
        " 0.0   0.0   0.01",
        " 0.0   0.0  -0.01",
        " 0.05  0.0   0.0",
        "-0.05  0.0   0.0",
        " 0.0   0.05  0.0",
        " 0.0  -0.05  0.0",
        " 0.0   0.0   0.05",
        " 0.0   0.0  -0.05",
        " 0.10  0.0   0.0",
        "-0.10  0.0   0.0",
        " 0.0   0.10  0.0",
        " 0.0  -0.10  0.0",
        " 0.0   0.0   0.10",
        " 0.0   0.0  -0.10",
        " 0.50  0.0   0.0",
        "-0.50  0.0   0.0",
        " 0.0   0.50  0.0",
        " 0.0  -0.50  0.0",
        " 0.0   0.0   0.50",
        " 0.0   0.0  -0.50",
        " 1     0.0   0.0",
        "-1    0.0   0.0",
        " 0.0   1     0.0",
        " 0.0  -1     0.0",
        " 0.0   0.0   1",
        " 0.0   0.0  -1",
    ],
    "scale": [
        "0.5",
        "0.75",
        "1.0",
        "1.25",
        "1.5",
        "1.75",
        "2.0",
        "2.25",
        "2.5",
        "2.75",
        "3.0",
        "3.25",
        "3.5",
        "3.75",
        "4.0",
        "4.25",
        "4.5",
        "4.75",
        "5.0",
        "5.25",
        "5.5",
        "5.75",
        "6.0",
        "6.25",
        "6.5",
        "7.0",
        "7.5",
        "8.0",
        "8.5",
        "9.0",
        "9.5",
        "10.0",
    ],
}

# Fixed args for every run
common_args = {
    "--method": "scripted",
    "--split": "test",
    "--model-path": "/iliad2/u/jmeribe/projects/vlm-scaffolding/logs/scripted/EnvBottle-v0/train1/2025-07-06_19-08-10/model_1999.pt",
}

for param_name, params in param_grid.items():
    for param in params:
        cmd = ["python", "-m", "train.vary_task_params.vary_bottle"]

        for k, v in common_args.items():
            cmd += [k, v]

        cmd += [f'--{param_name}', param]

        # print out what we're about to run
        print("Running:", " ".join(cmd))
        # actually invoke it
        subprocess.run(cmd, check=True)

